---
- hosts: localhost
  remote_user: root

  vars:
    user: thomas
    custom_hostname: laptop
    timezone: 'Europe/Paris'

  tasks:
    - name: install tools and stuff
      apt:
        pkg:
          - vim
          - ipcalc
          - tcpdump
          - dnsutils
          - firefox-esr #Firefox config with firefox connect
          - make
          - curl
          - sudo
          - traceroute
          - strace
          - ack
          - nmap
          - net-tools
          - gcc
          - iptables
          - automake
          - autoconf
          - htop
          - git
          - ncdu
          - tmux
          - zsh
          - gpg
          - jq
          - pass
          - python3
          - python3-pip
          - iptables-persistent
        state: present

    - name: 'Install AWS CLI'
      tags: 'aws-cli'
      become: 'yes'
      pip: >
       name=awscli
       state=latest

    - name: 'Install git precommit'
      tags: 'precommit'
      become: 'yes'
      pip: >
       name=pre-commit
       state=latest

    - name: 'Install detect secrets'
      tags: 'detect-secrets'
      become: 'yes'
      pip: >
       name=detect-secrets
       state=latest

    - name: Create user {{ user }}
      user: name={{ user }}
            comment={{ user }}
            shell=/bin/zsh

    - name: Add configuration files
      copy:
        src: files/config/{{item}}
        dest: "/home/{{ user }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0644
      with_items:
        ['.zshrc','.vimrc', '.tmux.conf', '.gitconfig']

    - name: Generate sshkey
      openssh_keypair:
        path: "/home/{{ user }}/.ssh/id_ssh_ed_test_ansible"
        type: ed25519

    - name: Create sudo rules for user {{ user }}
      become: 'yes'
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%{{ user }}'
        line: '%{{ user }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Firewall rule - allow all loopback traffic
      become: 'yes'
      iptables:
        action: append
        chain: INPUT
        in_interface: lo
        jump: ACCEPT

    - name: Firewall rule - allow established connections
      become: 'yes'
      iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT


    - name: Firewall rule - drop any traffic without rule
      become: 'yes'
      iptables:
        chain: INPUT
        jump: DROP
